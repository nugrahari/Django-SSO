version: "3"

services:
  django_svc1:
    build:
      context: $PWD/Service1/.
      dockerfile: Dockerfile
    container_name: django_svc1
    restart: always
    command: >
      sh -c "python manage.py collectstatic --noinput && python run.py"
    expose:
      - "8000"
    ports: # Tambahkan port untuk grpc jika diperlukan
      - "8000:8000"
    volumes:
      - $PWD/Service1:/app
    environment:
      - DJANGO_SETTINGS_MODULE=settings.settings
    networks:
      - backend_dev

  django_svc2:
    build:
      context: $PWD/Service2/.
      dockerfile: Dockerfile
    container_name: django_svc2
    restart: always
    command: python run.py
    expose:
      - "8001"
    ports: # Tambahkan port untuk grpc jika diperlukan
      - "8001:8001"
    volumes:
      - $PWD/Service2:/app
    environment:
      - DJANGO_SETTINGS_MODULE=settings.settings
    networks:
      - backend_dev

  django_svc3:
    build:
      context: $PWD/Service3/.
      dockerfile: Dockerfile
    container_name: django_svc3
    restart: always
    command: python run.py
    expose:
      - "8002"
    ports: # Tambahkan port untuk grpc jika diperlukan
      - "8002:8002"
    volumes:
      - $PWD/Service3:/app
    environment:
      - DJANGO_SETTINGS_MODULE=settings.settings
    networks:
      - backend_dev

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "802:802"
      - "443:443"
    volumes:
      - $PWD/nginx/nginx.conf:/etc/nginx/nginx.conf
      - $PWD/nginx/config:/etc/nginx/config
      - $PWD/Service1/staticfiles:/app/service1/staticfiles
    depends_on:
      - django_svc1
    networks:
      - backend_dev

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    command: ["redis-server", "--requirepass", "dev_password"] # Ganti dengan password yang diinginkan
    ports:
      - "6379:6379"
    networks:
      - backend_dev

networks:
  backend_dev:
    driver: bridge
